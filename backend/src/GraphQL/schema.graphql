# schema.graphql
type User {
  _id: ID!
  username: String!
  password: String!
}

type UserDetail {
  userDetails: UserDetails
  status: Status
}

type UserDetails {
  email: String
  icon: String
  youtube: String
  github: String
  about: String
}

type Status {
  message: String
  code: Int
}

type AuthResult {
  isAuthenticated: Boolean!
  token: String
  message: String
  code: Int
}

input AuthDetailInput {
  username: String!
  password: String!
}

type Token {
  Token: String!
}

type Query {
  getUser(userId: ID!): UserDetail
}

type Mutation {
  register(input: AuthDetailInput!): AuthResult!
  login(username: String!, password: String!): AuthResult!
  findToken(Token: String!): Token!
}
